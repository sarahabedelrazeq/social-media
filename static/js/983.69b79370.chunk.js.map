{"version":3,"file":"static/js/983.69b79370.chunk.js","mappings":"+OAuDA,IA3Ca,SAAC,GAAiC,IAA/BA,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACjC,OACE,0BACE,UAAC,IAAD,CAAMC,GAAI,CAAEC,aAAc,QAA1B,WACE,SAAC,IAAD,CACEC,QACE,gBAAKC,IAAKJ,EAAKH,MAAOQ,MAAO,GAAIC,OAAQ,GAAIC,UAAU,mBAEzDC,QACE,SAAC,IAAD,CAAY,aAAW,WAAvB,UACE,SAAC,IAAD,MAGJC,MAAOT,EAAKU,KACZC,UAAWZ,KAEb,SAAC,IAAD,CACEa,UAAU,MACVN,OAAO,MACPT,MAAOA,EACPgB,IAAI,iBAEN,SAAC,IAAD,WACE,SAAC,IAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,SACGjB,OAGL,UAAC,IAAD,CAAakB,gBAAc,EAA3B,WACE,SAAC,IAAD,CAAY,aAAW,mBAAvB,UACE,SAAC,IAAD,CACEC,MAAM,SAAC,IAAD,IACNC,aAAa,SAAC,IAAD,CAAUjB,GAAI,CAAEc,MAAO,cAGxC,SAAC,IAAD,CAAY,aAAW,QAAvB,UACE,SAAC,IAAD,aAMX,C,yHC1BD,GAzBYI,E,QAAAA,K,4DCMG,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFxB,EAAO0B,EAAMC,QAAO,SAAC3B,GAAD,OAAUA,EAAKwB,KAAOA,CAAtB,IAA0B,GAMpD,OAJAI,YAAW,WACTL,GAAW,EACZ,GAAE,CAAC,OAGF,gBAAKC,GAAG,eAAejB,UAAU,iBAAjC,UACE,8BACGe,GACC,UAACO,EAAA,GAAD,YACE,SAACC,EAAA,EAAD,CAAUhB,QAAQ,OAAOR,OAAQ,IAAKJ,aAAa,WACnD,SAAC4B,EAAA,EAAD,CAAUhB,QAAQ,OAAOR,OAAQ,MACjC,SAACwB,EAAA,EAAD,CAAUhB,QAAQ,OAAOR,OAAQ,MACjC,SAACwB,EAAA,EAAD,CAAUhB,QAAQ,cAAcR,OAAQ,OACxC,SAACwB,EAAA,EAAD,CAAUhB,QAAQ,OAAOR,OAAQ,MACjC,SAACwB,EAAA,EAAD,CAAUhB,QAAQ,OAAOR,OAAQ,MACjC,SAACwB,EAAA,EAAD,CAAUhB,QAAQ,cAAcR,OAAQ,UAG1C,SAACuB,EAAA,GAAD,WACE,UAACA,EAAA,GAAD,YACE,SAAC,EAAD,CAAKE,EAAE,QAAQC,GAAI,EAAnB,UACE,gBAAK5B,IAAI,kBAAkBG,UAAU,QAAQD,OAAO,WAEtD,SAAC,EAAD,CAAK2B,UAAU,SAAS1B,UAAU,qCAAlC,UACE,SAAC,EAAD,CACEN,GAAI,CACFiC,QAAS,OACTC,aAAc,MACdC,gBAAiB,QAJrB,UAOE,gBACEhC,IAAKJ,EAAKH,MACVQ,MAAM,MACNC,OAAO,MACPC,UAAU,wBAIhB,SAAC,EAAD,CAAKA,UAAU,OAAf,UACE,SAAC8B,EAAA,EAAD,CAAYvB,QAAQ,KAAKF,UAAU,KAAKL,UAAU,cAAlD,SACGP,EAAKU,UAGV,SAAC,EAAD,UACG4B,EAAAA,QACS,SAACC,GAAD,OAAUA,EAAKf,KAAOA,CAAtB,IACPgB,KAAI,SAACD,GAAD,OACH,SAACE,EAAA,GAAD,kBAAUF,GAAV,IAAgBvC,KAAMA,IADnB,cAUtB,C","sources":["components/Post/index.jsx","../node_modules/@mui/system/esm/Box/Box.js","pages/Profile/index.jsx"],"sourcesContent":["import { Favorite, FavoriteBorder, MoreVert, Share } from \"@mui/icons-material\";\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Checkbox,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nconst Post = ({ image, text, time, user }) => {\r\n  return (\r\n    <div>\r\n      <Card sx={{ marginBottom: \"24px\" }}>\r\n        <CardHeader\r\n          avatar={\r\n            <img src={user.image} width={50} height={50} className=\"rounded-circle\" />\r\n          }\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <MoreVert />\r\n            </IconButton>\r\n          }\r\n          title={user.name}\r\n          subheader={time}\r\n        />\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"20%\"\r\n          image={image}\r\n          alt=\"Paella dish\"\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {text}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton aria-label=\"add to favorites\">\r\n            <Checkbox\r\n              icon={<FavoriteBorder />}\r\n              checkedIcon={<Favorite sx={{ color: \"red\" }} />}\r\n            />\r\n          </IconButton>\r\n          <IconButton aria-label=\"share\">\r\n            <Share />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { Stack, Skeleton, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport posts from \"data/posts.json\";\r\nimport React, { useState } from \"react\";\r\nimport users from \"data/users.json\";\r\nimport Post from \"components/Post\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n  const [loading, setLoading] = useState(true);\r\n  const { id } = useParams();\r\n  const user = users.filter((user) => user.id === id)[0];\r\n\r\n  setTimeout(() => {\r\n    setLoading(false);\r\n  }, [3000]);\r\n\r\n  return (\r\n    <div id=\"profile-page\" className=\"page-container\">\r\n      <sections>\r\n        {loading ? (\r\n          <Grid>\r\n            <Skeleton variant=\"text\" height={300} marginBottom=\"200px\" />\r\n            <Skeleton variant=\"text\" height={20} />\r\n            <Skeleton variant=\"text\" height={20} />\r\n            <Skeleton variant=\"rectangular\" height={300} />\r\n            <Skeleton variant=\"text\" height={20} />\r\n            <Skeleton variant=\"text\" height={20} />\r\n            <Skeleton variant=\"rectangular\" height={300} />\r\n          </Grid>\r\n        ) : (\r\n          <Grid>\r\n            <Grid>\r\n              <Box m=\"-16px\" mb={0}>\r\n                <img src=\"/images/bg1.jpg\" className=\"w-100\" height=\"300\" />\r\n              </Box>\r\n              <Box marginTop=\"-110px\" className=\"d-flex justify-content-center mb-3\">\r\n                <Box\r\n                  sx={{\r\n                    padding: \"10px\",\r\n                    borderRadius: \"50%\",\r\n                    backgroundColor: \"gray\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={user.image}\r\n                    width=\"200\"\r\n                    height=\"200\"\r\n                    className=\"rounded-circle\"\r\n                  />\r\n                </Box>\r\n              </Box>\r\n              <Box className=\"mb-5\">\r\n                <Typography variant=\"h5\" component=\"h2\" className=\"text-center\">\r\n                  {user.name}\r\n                </Typography>\r\n              </Box>\r\n              <Box>\r\n                {posts\r\n                  .filter((post) => post.id === id)\r\n                  .map((post) => (\r\n                    <Post {...post} user={user} />\r\n                  ))}\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </sections>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["image","text","time","user","sx","marginBottom","avatar","src","width","height","className","action","title","name","subheader","component","alt","variant","color","disableSpacing","icon","checkedIcon","createBox","Profile","useState","loading","setLoading","id","useParams","users","filter","setTimeout","Grid","Skeleton","m","mb","marginTop","padding","borderRadius","backgroundColor","Typography","posts","post","map","Post"],"sourceRoot":""}